<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Universe OpenAstronomy (Posts about radis)</title><link>http://openastronomy.org/Universe_OA/</link><description></description><atom:link href="http://openastronomy.org/Universe_OA/categories/radis.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sat, 01 Oct 2022 03:09:06 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Final Evaluation - A time to look back.</title><link>http://openastronomy.org/Universe_OA/posts/2022/09/20220912_0000_tranhuunhathuy/</link><dc:creator>TranHuuNhatHuy</dc:creator><description>&lt;p&gt;&lt;span class="gatsby-resp-image-wrapper" style="display: block; margin-left: auto; margin-right: auto;"&gt;
&lt;a class="gatsby-resp-image-link" href="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/236320199c2c7323f80233362c6a584c/71b12/logoOA.png" rel="noopener" style="display: block;" target="_blank"&gt;
&lt;span class="gatsby-resp-image-background-image" style="display: block;"&gt;&lt;/span&gt;
&lt;!-- TEASER_END --&gt;
&lt;img alt="logo_OpenAstronomy" class="gatsby-resp-image-image" src="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/236320199c2c7323f80233362c6a584c/f058b/logoOA.png" style="width: 100%; height: 100%; margin: 0; vertical-align: middle;" title="logo_OpenAstronomy"&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;1. What I have done in OpenAstronomy and in RADIS&lt;/h4&gt;
&lt;p&gt;Throughout 3 months with RADIS, I have successfully developed a new fitting module for spectrum fitting purposes. RADIS has its own fitting feature, as shown in &lt;a href="https://radis.readthedocs.io/en/latest/auto_examples/plot_1T_fit.html#sphx-glr-auto-examples-plot-1t-fit-py"&gt;1-temperature fit example&lt;/a&gt;, where you have to manually create the spectrum model, input the experimental spectrum and other ground-truths into numerous RADIS native functions, as well as adjust the fitting pipeline yourself.&lt;/p&gt;
&lt;p&gt;Now with the new fitting module released, all you have to do is to prepare a &lt;code class="language-text"&gt;.spec&lt;/code&gt; file containing your experimental spectrum, fill some JSON forms describing the ground-truth conditions just like how you fill your medical checkup paper, call the function &lt;a href="https://radis.readthedocs.io/en/latest/source/radis.tools.new_fitting.html#radis.tools.new_fitting.fit_spectrum"&gt;&lt;code class="language-text"&gt;fit_spectrum()&lt;/code&gt;&lt;/a&gt; and let it do all the work! If you are not satisfied with the result, you can simply adjust the parameters in your JSON, such as &lt;code class="language-text"&gt;slit&lt;/code&gt; and &lt;code class="language-text"&gt;path_length&lt;/code&gt;, then recall the function again, until the results are satisfied.&lt;/p&gt;
&lt;p&gt;This is way easier and more convenient than dwelling into RADIS documentation to find out and learn how to use the current example, especially for new RADIS users. Various &lt;a href="https://github.com/radis/radis/pull/522#issue-1365475821"&gt;benchmarking efforts&lt;/a&gt; have shown that this new fitting module has performance advantages over the old version. This new fitting module aims to provide an end-to-end fitting experience, with minimum amount of RADIS knowledge needed.&lt;/p&gt;
&lt;p&gt;You can see an overview of my project here: &lt;a href="https://github.com/radis/radis/projects/6"&gt;https://github.com/radis/radis/projects/6&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;2. GSoC, RADIS and a learning curve that has been fulfilled&lt;/h4&gt;
&lt;p&gt;Throughout my GSoC journey with RADIS and working as a contributor, I really enjoyed all the experience of developing and contributing a meaningful improvement to a grand community-based project. Furthermore, I used to be a Computer Science majored student back in Vietnam, but after coming to Japan, I have been learning engineering for more than 2 years, enough for me to miss the old time coding projects and grinding hackathons, the days when I was truly a “CS student”. GSoC truly granted me a precious chance to rekindle the interest I have long lost, with wonderous opportunities to learn from prestigious mentors, and a huge boost for my background to get back to the run.&lt;/p&gt;
&lt;p&gt;In addition, one of the most satisfying moments in this GSoC, is when I finally nailed a bug or issue after days (or even weeks, trust me) of debugging, using the last brain cell to figure out what is the reason. The longer the suffering, the greater the hype that comes afterward. I guess we as developers all share this kind of experience often, but for a guy who starts coding again after a long time like, the ecstasy is at least three-fold.&lt;/p&gt;
&lt;p&gt;Furthermore, I don’t know what other open-source projects are, but RADIS is an extremely well-developed one. They have code coverage, pre-commit check, automatic documentation, and an extensive library of well-structured classes and methods for multiple purposes. This is a level of professional development I have never seen before, and I am extremely eager to learn all of this, not only within the GSoC, but also for a much longer time. This project also helped me to gain significant knowledge and experience&lt;/p&gt;
&lt;p&gt;So, to sum up, I really enjoyed this GSoC, especially with RADIS mentors and community. Thank you so much, GSoC and RADIS, for all of these wonderous experiences.&lt;/p&gt;
&lt;h4&gt;3. Of course, there were hard times, but hey, “Hard times come again no more”&lt;/h4&gt;
&lt;p&gt;I believe the most challenging part of my GSoC 2022 experience, is during the development of my project itself. My project is “Spectrum Fitting Improvement”, in which I will implement a brand-new fitting method that uses a different module than the original method’s, and there are several challenges that I only discovered after joining the project.&lt;/p&gt;
&lt;p&gt;Firstly, the fitting process itself is totally a black box, where I implemented a spectrum, along with its ground-truth parameters, and hopefully the result comes as I expect. In the early days, there were weeks when I could not understand why the result went bad. The reasons could be faulty ground-truth data (original ground-truth parameters are incorrect), or the spectrum itself (mistakes during spectral variable extraction), a code bug, or even from the RADIS limitation itself (currently RADIS only uses air broadening coefficients, which is not suitable for experiments in other gases). All of these costed me huge time and efforts just trying to figure out the culprit, and those were the most anxious times.&lt;/p&gt;
&lt;p&gt;Secondly, there are several problems and bugs, or required implementations that can only be discovered during the last weeks of this GSoC, which makes these time tough and sour for me.&lt;/p&gt;
&lt;p&gt;Finally, my laptop was abruptly broken beyond repair during the middle of second phase, in which I had to wait for one week before the new laptop arrived and I could continue my work. Truly the darkest, most desperate days back then.&lt;/p&gt;
&lt;p&gt;Gradually the learning curve is flattened, but still, there were tough times. Thanks to GSoC, I could experience what would happen in a real project, where you have to anticipate and be ready to deal with all possible accidents and troubles, while keeping on a tight schedule. These will be precious experience for me and my career ahead.&lt;/p&gt;
&lt;h4&gt;4. A little tribute to my mentors&lt;/h4&gt;
&lt;p&gt;Firstly, I would like to say, thank you so much, my mentors - Mr. Erwan, Mr. Minou, Anand, Gagan, as well as other unofficial mentors such as Mr. Corentin - for all the time and efforts you have put through to guide us – some random annoying students always trying to bother you with questions throughout 4 months.&lt;/p&gt;
&lt;p&gt;You helped us a lot in understanding the RADIS codebase and overall structure, as well as various skills in developing a grand-scaled project like RADIS. Throughout this GSoC, I had opportunity to familiarize with code coverage, pre-commit check and linting, automatic documentation such as readthedocs, a bunch of GitHub tips, and most important, a sheer confidence of open-source project contributing, by jumping into the source code itself, understanding it slow and steady, then finally pushing commits. Before this April, all of these were very scary for me. But now, as I look back, they are just breezes to me. Now I can truly understand and feel the scope of GSoC – to encourage students to contribute to open-source projects. Thanks to you, this is a huge success to me.&lt;/p&gt;
&lt;p&gt;All of these could not be done without you entrusting us from the very beginning of selection process. From the very moment of you accepting us, we are here today, wrapping up what we have learned, finishing our projects, and carving our names into the list of RADIS contributors. These will be precious experience for me and my career ahead.&lt;/p&gt;
&lt;h4&gt;5. And finally, to someone reading this&lt;/h4&gt;
&lt;p&gt;Ayyo, to whoever reading this,&lt;/p&gt;
&lt;p&gt;I believe that you must be some next year’s GSoC applicants sneaking around and patiently preparing for the upcoming turn. If you are reading this, then firstly I would like to say thank you for reading all the way here.&lt;/p&gt;
&lt;p&gt;I have so many things to share you about all the experiences I had during this GSoC, about every moment in all aspects during these 3 months. But I’m afraid I might accidentally spoil your fun in near future, so I will only give some necessary advice, hope they might help you enjoy better in the next GSoC.&lt;/p&gt;
&lt;p&gt;Firstly, the actual time required to complete the project always LONGER than the initially planned time, so try your best to finish everything as soon as possible.&lt;/p&gt;
&lt;p&gt;Secondly, there might be times when you confront an extremely hard issue which takes you A LOT of time and you still cannot deal with it. When that time comes, explain to your mentors, and find a way, instead of gazing on the screen trying to solve it singlehandedly while wasting 1-2 weeks for that, like I did.&lt;/p&gt;
&lt;p&gt;This is also relevant to the above advice but, if you find yourself scared to tell your mentors about a challenge you are facing, please do not be afraid and just tell them. I used to be extremely afraid of asking my mentors because sometimes they were deadly serious (in a professional way), and thus I forced myself to solve an impossible task for 2 weeks before finally reaching out to them. Please do not be afraid and share with them anything, if you want to find a solution, if you want to change the current objectives, or whatever. Just ask!&lt;/p&gt;
&lt;p&gt;And finally, try to enjoy GSoC, I meant, every moment of it. It worths. Really.&lt;/p&gt;
&lt;p&gt;Good luck to become a GSoC member and successfully carve your name among contributors!&lt;/p&gt;
&lt;p&gt;September 12, 2022
Tran Huu Nhat Huy&lt;/p&gt;
&lt;p&gt;&lt;span class="gatsby-resp-image-wrapper" style="display: block; margin-left: auto; margin-right: auto;"&gt;
&lt;a class="gatsby-resp-image-link" href="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/4d7ee6f3d3a81c95e441a7cc5dcadb98/ac99c/me.jpg" rel="noopener" style="display: block;" target="_blank"&gt;
&lt;span class="gatsby-resp-image-background-image" style="display: block;"&gt;&lt;/span&gt;
&lt;img alt="Me, among the peaks of Shizuoka, Japan." class="gatsby-resp-image-image" src="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/4d7ee6f3d3a81c95e441a7cc5dcadb98/828fb/me.jpg" style="width: 100%; height: 100%; margin: 0; vertical-align: middle;" title="Me, among the peaks of Shizuoka, Japan."&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2022/09/20220912_0000_tranhuunhathuy/</guid><pubDate>Sun, 11 Sep 2022 23:00:00 GMT</pubDate></item><item><title>Week 12 - Final implementation into RADIS, along with a plethora of illustrative examples.</title><link>http://openastronomy.org/Universe_OA/posts/2022/09/20220905_0000_tranhuunhathuy/</link><dc:creator>TranHuuNhatHuy</dc:creator><description>&lt;h4&gt;1. Implementation of modules into RADIS&lt;/h4&gt;
&lt;p&gt;Finally, after being approved by Mr. Erwan, I can implement all of my modules, developed separately in my repo &lt;a href="https://github.com/TranHuuNhatHuy/RADIS-Spectrum-Fitting-Benchmark"&gt;RADIS-Spectrum-Fitting-Benchmark&lt;/a&gt;, into RADIS codebase. The implementation features &lt;a href="https://github.com/radis/radis/blob/develop/radis/tools/new_fitting.py"&gt;&lt;code class="language-text"&gt;new_fitting.py&lt;/code&gt;&lt;/a&gt;, the new fitting module that stores all the fitting functions and associated models, whose performance confirmed after a bunch of user-testing cases.&lt;/p&gt;
&lt;h4&gt;2. Accompanied illustrative examples&lt;/h4&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;They are gallery examples that are added into &lt;code class="language-text"&gt;radis/examples&lt;/code&gt;, serving as illustrative scripts for my new fitting module:&lt;/p&gt;
&lt;h5&gt;(i) &lt;code class="language-text"&gt;plot_newfitting_Tgas.py&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;The most basic example of how to use new fitting module, including the formats and so on.&lt;/p&gt;
&lt;h5&gt;(ii) &lt;code class="language-text"&gt;plot_newfitting_Trot-Tvib-molfrac.py&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;The real-life fitting case provided by Mr. Corentin, featuring non-LTE CO spectrum in which we will fit &lt;code class="language-text"&gt;Trot&lt;/code&gt;, &lt;code class="language-text"&gt;Tvib&lt;/code&gt; and &lt;code class="language-text"&gt;mole_fraction&lt;/code&gt;.&lt;/p&gt;
&lt;h5&gt;(iii) &lt;code class="language-text"&gt;plot_newfitting_Tgas-molfrac.py&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;Mr. Minou’s user-testing case of CO absorbance spectrum near 2011 cm-1. This case features spectrum extraction from a &lt;code class="language-text"&gt;.mat&lt;/code&gt; MATLAB file. Originally, this file was 1.2 MB, quite large to be added to RADIS. Thus, I removed all fields unnecessary for spectrum generation, and now it only has around 400 kB left.&lt;/p&gt;
&lt;h5&gt;(iv) &lt;code class="language-text"&gt;plot_newfitting_comparison_oldnew.py&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;Performance comparison example between &lt;a href="https://radis.readthedocs.io/en/latest/auto_examples/plot_1T_fit.html#sphx-glr-auto-examples-plot-1t-fit-py"&gt;current 1-temperature fitting&lt;/a&gt; and my new fitting module, under exactly the same ground-truths and settings. The benchmark result shows that, under exactly the same conditions, the new best fitted value differ 0.45% from the old one (1464.1 K from the old 1457.5 K). New fitting module requires half as many iterations as the old one and hence faster, with much smaller residual. In detail:&lt;/p&gt;
&lt;div class="gatsby-highlight"&gt;&lt;pre class="language-text"&gt;&lt;code class="language-text"&gt;====================  PERFORMANCE COMPARISON BETWEEN 2 FITTING METHODS  ====================

1. LAST RESIDUAL

- Old 1T fitting example:       0.002730027027336094
- New fitting module:           0.0005174179496843629

2. NUMBER OF FITTING LOOPS

- Old 1T fitting example:       32 loops
- New fitting module:           16 loops

3. TOTAL TIME TAKEN (s)

- Old 1T fitting example:       4.881942987442017 s
- New fitting module:           2.7344970703125 s

==========================================================================================&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I’m not sure this superiority will persist in all cases, but even so, I believe the value of my module still lies in its practical and easy to use/apply.&lt;/p&gt;
&lt;h5&gt;(v) &lt;code class="language-text"&gt;plot_newfitting_comparison_methods.py&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;A benchmarking example which compares performance between different &lt;a href="https://lmfit.github.io/lmfit-py/fitting.html#choosing-different-fitting-methods"&gt;LMFIT fitting algorithms&lt;/a&gt;. It measures their last residual (for accuracy evaluation) and number of iterations (for robustness evaluation). The benchmark result shows that, under exactly the same conditions, &lt;code class="language-text"&gt;leastsq&lt;/code&gt; and &lt;code class="language-text"&gt;lbfgsb&lt;/code&gt; work best, with &lt;code class="language-text"&gt;leastsq&lt;/code&gt; good at accuracy, while &lt;code class="language-text"&gt;lbfgsb&lt;/code&gt; good at speed (and theoretically, memory requirement). Thus, I set &lt;code class="language-text"&gt;leastsq&lt;/code&gt; as default method for the module, but also encourage users to switch to &lt;code class="language-text"&gt;lbfgsb&lt;/code&gt; in case things turn sour.&lt;/p&gt;
&lt;div class="gatsby-highlight"&gt;&lt;pre class="language-text"&gt;&lt;code class="language-text"&gt;======================== BENCHMARKING RESULT ========================

||           METHOD          ||          RESIDUAL         || LOOPS ||
||---------------------------||---------------------------||-------||
|| leastsq                   || 1.4739494411950239e-07    || 24    ||
|| least_squares             || 1.2170348021620847e-05    || 1     ||
|| differential_evolution    || 1.4739855740762716e-07    || 151   ||
|| brute                     || 1.2287258962300115e-06    || 20    ||
|| basinhopping              || 7.930954059631543e-06     || 151   ||
|| ampgo                     || 4.105104127826488e-07     || 151   ||
|| nelder                    || 1.4739942144030064e-07    || 30    ||
|| lbfgsb                    || 1.4739494411955646e-07    || 28    ||
|| powell                    || 1.473949441200994e-07     || 43    ||
|| cg                        || 1.4776331905574135e-07    || 30    ||
|| cobyla                    || 1.1524288718226295e-05    || 21    ||
|| bfgs                      || 1.4776331905574135e-07    || 30    ||
|| tnc                       || 1.4740393115424221e-07    || 28    ||
|| trust-constr              || 1.4739494411948182e-07    || 26    ||
|| slsqp                     || 1.2170348021620847e-05    || 2     ||
|| shgo                      || 1.0507694502308952e-05    || 5     ||
|| dual_annealing            || 1.5455930218501237e-05    || 151   ||
||---------------------------||---------------------------||-------||&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class="gatsby-resp-image-wrapper" style="display: block; margin-left: auto; margin-right: auto;"&gt;
&lt;a class="gatsby-resp-image-link" href="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/dc95cb63a4457b8bb0d3d58fca7b8bbe/2bf90/method_compare_result.png" rel="noopener" style="display: block;" target="_blank"&gt;
&lt;span class="gatsby-resp-image-background-image" style="display: block;"&gt;&lt;/span&gt;
&lt;img alt="Method benchmarking result." class="gatsby-resp-image-image" src="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/dc95cb63a4457b8bb0d3d58fca7b8bbe/f058b/method_compare_result.png" style="width: 100%; height: 100%; margin: 0; vertical-align: middle;" title="Method benchmarking result."&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2022/09/20220905_0000_tranhuunhathuy/</guid><pubDate>Sun, 04 Sep 2022 23:00:00 GMT</pubDate></item><item><title>Final Blog</title><link>http://openastronomy.org/Universe_OA/posts/2022/09/20220903_0000_arunavabasu-03/</link><dc:creator>arunavabasu-03</dc:creator><description>&lt;p&gt;Final Evaluation In this phase , i am preety much focusing to add the test files for frontend and backend and also setup the pipeline to run…&lt;/p&gt;
&lt;div style="margin-top: 50px; font-style: italic;"&gt;&lt;strong&gt;&lt;a href="https://gsoc.arunavabasu.com/12/"&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br&gt; &lt;br&gt;
&lt;!-- TEASER_END --&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2022/09/20220903_0000_arunavabasu-03/</guid><pubDate>Fri, 02 Sep 2022 23:00:00 GMT</pubDate></item><item><title>week 11 and week 12</title><link>http://openastronomy.org/Universe_OA/posts/2022/09/20220903_0000_supriya1702/</link><dc:creator>Supriya1702</dc:creator><description>&lt;p&gt;Now since fetching of extra columns which includes broadening coeffcients was completed I had to pull the the fetch_hitran_update changes…&lt;/p&gt;
&lt;div style="margin-top: 50px; font-style: italic;"&gt;&lt;strong&gt;&lt;a href="https://minimal-blog.lekoarts.de/week-11-and-week-12"&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br&gt; &lt;br&gt;
&lt;!-- TEASER_END --&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2022/09/20220903_0000_supriya1702/</guid><pubDate>Fri, 02 Sep 2022 23:00:00 GMT</pubDate></item><item><title>Moving On</title><link>http://openastronomy.org/Universe_OA/posts/2022/09/20220901_1322_sagarchotalia/</link><dc:creator>sagarchotalia</dc:creator><description>&lt;p&gt;Chapter 4: Weeks 5 and 6 I had scratched my head in every way possible. However, I was no closer to actually debugging the error, which perplexed me. I searched every relevant function, every relevant block of code, understood how each and every parameter was being calculated, and made a mental map of how functions were being accessed and in which order. I was still stuck. And so, I decided to just scrap my current implementation, and started over.
&lt;!-- TEASER_END --&gt;&lt;/p&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2022/09/20220901_1322_sagarchotalia/</guid><pubDate>Thu, 01 Sep 2022 12:22:10 GMT</pubDate></item><item><title>Making headway.</title><link>http://openastronomy.org/Universe_OA/posts/2022/09/20220901_1321_sagarchotalia/</link><dc:creator>sagarchotalia</dc:creator><description>&lt;p&gt;In week 3, I began testing my implementation of the chunksize feature. I found that there was an error being raised in the plotting of graphs, due to a library called publib being used. Upon searching for this library, I was amazed to see that it was built by Dr. Erwan! You can have a look at it here
I initially thought nothing of the error, and was convinced that my implementation was correct.
&lt;!-- TEASER_END --&gt;&lt;/p&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2022/09/20220901_1321_sagarchotalia/</guid><pubDate>Thu, 01 Sep 2022 12:21:34 GMT</pubDate></item><item><title>Officially Started. Unofficially...not so much.</title><link>http://openastronomy.org/Universe_OA/posts/2022/09/20220901_1320_sagarchotalia/</link><dc:creator>sagarchotalia</dc:creator><description>&lt;p&gt;Let the Coding Begin! Chapter 2: Weeks 1 and 2 Dr. Erwan let us know about the community’s plan to conduct our projects in teams of two, based on our projects’ similarities.
Thus a team between Arunava Basu and I, and a team between Tran Huu Nhat Huy and Supriya Kumari was formed.
Unfortunately, I fell sick midway through week 1. I tried to tackle smaller issues, but couldn’t focus at all.
&lt;!-- TEASER_END --&gt;&lt;/p&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2022/09/20220901_1320_sagarchotalia/</guid><pubDate>Thu, 01 Sep 2022 12:20:49 GMT</pubDate></item><item><title>2022 06 04 Chapter 0</title><link>http://openastronomy.org/Universe_OA/posts/2022/09/20220901_1135_sagarchotalia/</link><dc:creator>sagarchotalia</dc:creator><description>&lt;p&gt;Chapter 0 Pre-GSoC Phase ??? - 20th May, 2022 I first started searching for organisations back in January. After extensive research, I found OpenAstronomy to be quite interesting and joined the Slack channel. I was looking at the sub-organisations in OpenAstronomy, and joined their individual Slack channels as well. It was around this time that I started looking at the issues of the sub-orgs. I was very new to open-source, hence even basic stuff like issuing PR’s and tackling simple good-first-issues was challenging.
&lt;!-- TEASER_END --&gt;&lt;/p&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2022/09/20220901_1135_sagarchotalia/</guid><pubDate>Thu, 01 Sep 2022 10:35:45 GMT</pubDate></item><item><title>Week 9, 10 and 11 - The challenge, the calamity, the hope, and the salvation.</title><link>http://openastronomy.org/Universe_OA/posts/2022/08/20220828_0000_tranhuunhathuy/</link><dc:creator>TranHuuNhatHuy</dc:creator><description>&lt;h4&gt;1. The challenge&lt;/h4&gt;
&lt;p&gt;After successfully dealing with Mr. Minou’s case, I got a message from another RADIS spectroscopic scientist - Mr. Corentin Grimaldi, a Ph.D. candidate of CentraleSupélec, Paris. He had several experimental spectra containing CO and CO2 at different temperatures and possibly in non-equillibrium. There were 3 spectra in total, and he also provided 3 Python scripts he used to fit them:&lt;/p&gt;
&lt;ul&gt;
&lt;!-- TEASER_END --&gt;
&lt;li&gt;&lt;code class="language-text"&gt;Fit_init_V2.py&lt;/code&gt; : the script for fitting initialization, which conducts all the basic functions such as normalization, crop, slit convolution &amp;amp; dispersion, residual calculation, etc.&lt;/li&gt;
&lt;li&gt;&lt;code class="language-text"&gt;Optimize_find_min_2D_V2.py&lt;/code&gt; : the program that looks for optimum parameters such as &lt;code class="language-text"&gt;Trot&lt;/code&gt;, &lt;code class="language-text"&gt;Tvib&lt;/code&gt;, &lt;code class="language-text"&gt;molfrac&lt;/code&gt;, etc.&lt;/li&gt;
&lt;li&gt;&lt;code class="language-text"&gt;fit_CO_1T_CO2_2T_cv_V2.py&lt;/code&gt; :  the master program that conducts main fitting job.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So there is one thing that I need to mention first: these spectra are quite challenging to fit. Not hard, but challenging. Both CO2 and CO overlap in this spectral region, and a lot of parameters are unknown: &lt;code class="language-text"&gt;Trot&lt;/code&gt;, &lt;code class="language-text"&gt;Tvib&lt;/code&gt;, &lt;code class="language-text"&gt;x_CO&lt;/code&gt; for CO and &lt;code class="language-text"&gt;Trot&lt;/code&gt;, &lt;code class="language-text"&gt;Tvib1&lt;/code&gt;, &lt;code class="language-text"&gt;Tvib2&lt;/code&gt;, &lt;code class="language-text"&gt;Tvib3&lt;/code&gt;, &lt;code class="language-text"&gt;x_CO2&lt;/code&gt; for CO2. Furthermore, unfortunately some cold CO2 and H2O absorb the incomming radiance and the mole fraction is also unknown, too. So basically, there are a lot of fit parameters we need to find, and they don’t really follow the normal spectrum calculation that RADIS offers.&lt;/p&gt;
&lt;p&gt;Although Mr. Corentin provided a fitting pipeline for these cases, I still kinda doubt whether should I implement his very specific and exotic approach to my unified modules. After experiencing a lot of fitting scripts from various users in the community, I feel like although I can implement a common interface to support most of fitting cases, but definitely not all of them, since each experimental spectrum is suitable for a unique workflow. Mr. Corentin’s case and approach is just somewhat way too unique and completely different from mine. So basically, his approach is quite difficult to be generalized and implemented into a module aimed to serve general fitting cases.&lt;/p&gt;
&lt;h4&gt;2. The calamity&lt;/h4&gt;
&lt;p&gt;After spending the whole week 9 finding a solution for Mr. Corentin’s cases, at the beginning of week 10, all of sudden my MSI laptop - the 6-year buddy always accompanies me to all the coding contests and evreything - stopped working. The next day, the iPhone 11 I bought this February had its screen flickered intensively and thus unable to use. Within less than 48 hours, I, one of GSoC contributor, was cut off from the modern life! All the following days were desperate efforts trying to get my stuffs fixed but nothing worked, trying to communicate with the mentors, trying not to miss any important emails and news. Amidst the challenging second phase of GSoC, I was rendered useless for one week straight! I shudder recalling it, those dark and desperate days sitting in Japanese internet cafes to access the Internet, while extremely anxious about a future of failing GSoC.&lt;/p&gt;
&lt;h4&gt;3. The hope&lt;/h4&gt;
&lt;p&gt;After one week of despair, my new Macbook Air M1 finally arrived!&lt;/p&gt;
&lt;p&gt;&lt;span class="gatsby-resp-image-wrapper" style="display: block; margin-left: auto; margin-right: auto;"&gt;
&lt;a class="gatsby-resp-image-link" href="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/235c694787085f9f7595ef9772eb4744/0f98f/new_Mac.jpg" rel="noopener" style="display: block;" target="_blank"&gt;
&lt;span class="gatsby-resp-image-background-image" style="display: block;"&gt;&lt;/span&gt;
&lt;img alt="My new buddy!" class="gatsby-resp-image-image" src="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/235c694787085f9f7595ef9772eb4744/828fb/new_Mac.jpg" style="width: 100%; height: 100%; margin: 0; vertical-align: middle;" title="My new buddy!"&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Finally days and nights in extreme anxious of being unable to do anything while seeing my friends committing and pushing onto GitHub, have finally gone! Now I have my new Mac (with an exorbitant cost as Japanese Yen is dropping like my mental condition recently), and within the remaining days until the final evaluation, I will rush my best with all I have to deliver my module!&lt;/p&gt;
&lt;h4&gt;4. The salvation&lt;/h4&gt;
&lt;p&gt;After a long time of struggling, I finally received new experimental spectra from Mr. Corentin. He finally realized that those old cases were just too complicated, and now we have 4 simpler tests case with only CO, in the spectral range of 2000 nm to 2600 nm, non-equillibrium, not really absorbed:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://gsoc2022tranhuunhathuy.gatsbyjs.io/0_100cm%20Down%20Sampled%20-%2010cm_10pctCO2_1-wc-gw450-gr300-sl1500-acc5000-.spec"&gt;0_100cm%20Down%20Sampled%20-%2010cm_10pctCO2_1-wc-gw450-gr300-sl1500-acc5000-.spec&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://gsoc2022tranhuunhathuy.gatsbyjs.io/0_100cm%20Down%20Sampled%20-%2020cm_10pctCO2_1-wc-gw450-gr300-sl1500-acc5000-.spec"&gt;0_100cm%20Down%20Sampled%20-%2020cm_10pctCO2_1-wc-gw450-gr300-sl1500-acc5000-.spec&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://gsoc2022tranhuunhathuy.gatsbyjs.io/0_200cm%20Down%20Sampled%20-%2035cm_10pctCO2_1-wc-gw450-gr300-sl1500-acc5000-.spec"&gt;0_200cm%20Down%20Sampled%20-%2035cm_10pctCO2_1-wc-gw450-gr300-sl1500-acc5000-.spec&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://gsoc2022tranhuunhathuy.gatsbyjs.io/0_300cm%20Down%20Sampled%20-%2010cm_10pctCO2_1-wc-gw450-gr300-sl1500-acc5000-.spec"&gt;0_300cm%20Down%20Sampled%20-%2010cm_10pctCO2_1-wc-gw450-gr300-sl1500-acc5000-.spec&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Also, in these cases Mr. Corentin introduced a complex slit settings like this:&lt;/p&gt;
&lt;div class="gatsby-highlight"&gt;&lt;pre class="language-python"&gt;&lt;code class="language-python"&gt;&lt;span class="token keyword"&gt;def&lt;/span&gt; &lt;span class="token function"&gt;slit_dispersion&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;w&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;
phi &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token operator"&gt;-&lt;/span&gt;&lt;span class="token number"&gt;6.33&lt;/span&gt;
f &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;750&lt;/span&gt;
gr &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;300&lt;/span&gt;
m &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;1&lt;/span&gt;
phi &lt;span class="token operator"&gt;*=&lt;/span&gt; &lt;span class="token operator"&gt;-&lt;/span&gt; &lt;span class="token number"&gt;2&lt;/span&gt;&lt;span class="token operator"&gt;*&lt;/span&gt;np&lt;span class="token punctuation"&gt;.&lt;/span&gt;pi&lt;span class="token operator"&gt;/&lt;/span&gt;&lt;span class="token number"&gt;360&lt;/span&gt;
d &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;1e-3&lt;/span&gt;&lt;span class="token operator"&gt;/&lt;/span&gt;gr
disp &lt;span class="token operator"&gt;=&lt;/span&gt; w&lt;span class="token operator"&gt;/&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token number"&gt;2&lt;/span&gt;&lt;span class="token operator"&gt;*&lt;/span&gt;f&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token operator"&gt;*&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt;np&lt;span class="token punctuation"&gt;.&lt;/span&gt;tan&lt;span class="token punctuation"&gt;(&lt;/span&gt;phi&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token operator"&gt;+&lt;/span&gt;np&lt;span class="token punctuation"&gt;.&lt;/span&gt;sqrt&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token number"&gt;2&lt;/span&gt;&lt;span class="token operator"&gt;*&lt;/span&gt;d&lt;span class="token operator"&gt;/&lt;/span&gt;m&lt;span class="token operator"&gt;/&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;w&lt;span class="token operator"&gt;*&lt;/span&gt;&lt;span class="token number"&gt;1e-9&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token operator"&gt;*&lt;/span&gt;np&lt;span class="token punctuation"&gt;.&lt;/span&gt;cos&lt;span class="token punctuation"&gt;(&lt;/span&gt;phi&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token operator"&gt;**&lt;/span&gt;&lt;span class="token number"&gt;2&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt;&lt;span class="token number"&gt;1&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;
&lt;span class="token keyword"&gt;return&lt;/span&gt; disp  &lt;span class="token comment"&gt;# nm/mm&lt;/span&gt;

&lt;span class="token keyword"&gt;def&lt;/span&gt; &lt;span class="token function"&gt;apply_my_slit&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;spectrum&lt;span class="token punctuation"&gt;,&lt;/span&gt; inplace&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token boolean"&gt;False&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;
slit &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;1500&lt;/span&gt;  &lt;span class="token comment"&gt;# µm&lt;/span&gt;
pitch &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;20&lt;/span&gt;   &lt;span class="token comment"&gt;# µm&lt;/span&gt;
top_slit_um &lt;span class="token operator"&gt;=&lt;/span&gt; slit &lt;span class="token operator"&gt;-&lt;/span&gt; pitch   &lt;span class="token comment"&gt;# µm&lt;/span&gt;
base_slit_um &lt;span class="token operator"&gt;=&lt;/span&gt; slit &lt;span class="token operator"&gt;+&lt;/span&gt; pitch  &lt;span class="token comment"&gt;# µm&lt;/span&gt;
center_slit &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;5090&lt;/span&gt;
dispersion &lt;span class="token operator"&gt;=&lt;/span&gt; slit_dispersion&lt;span class="token punctuation"&gt;(&lt;/span&gt;center_slit&lt;span class="token punctuation"&gt;)&lt;/span&gt;
top_slit_nm &lt;span class="token operator"&gt;=&lt;/span&gt; top_slit_um&lt;span class="token operator"&gt;*&lt;/span&gt;&lt;span class="token number"&gt;1e-3&lt;/span&gt;&lt;span class="token operator"&gt;*&lt;/span&gt;dispersion
base_slit_nm &lt;span class="token operator"&gt;=&lt;/span&gt; base_slit_um&lt;span class="token operator"&gt;*&lt;/span&gt;&lt;span class="token number"&gt;1e-3&lt;/span&gt;&lt;span class="token operator"&gt;*&lt;/span&gt;dispersion&lt;span class="token operator"&gt;*&lt;/span&gt;&lt;span class="token number"&gt;1.33&lt;/span&gt;
&lt;span class="token keyword"&gt;return&lt;/span&gt; spectrum&lt;span class="token punctuation"&gt;.&lt;/span&gt;apply_slit&lt;span class="token punctuation"&gt;(&lt;/span&gt;&lt;span class="token punctuation"&gt;(&lt;/span&gt;top_slit_nm&lt;span class="token punctuation"&gt;,&lt;/span&gt; base_slit_nm&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; center_wavespace&lt;span class="token operator"&gt;=&lt;/span&gt;center_slit&lt;span class="token punctuation"&gt;,&lt;/span&gt; unit&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;'nm'&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; shape&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;'trapezoidal'&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; slit_dispersion&lt;span class="token operator"&gt;=&lt;/span&gt;slit_dispersion&lt;span class="token punctuation"&gt;,&lt;/span&gt; inplace&lt;span class="token operator"&gt;=&lt;/span&gt;inplace&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Initially, my fitting module only allows &lt;code class="language-text"&gt;slit&lt;/code&gt; to be enter with the format of a slit value accompanied by slit unit. For example:&lt;/p&gt;
&lt;div class="gatsby-highlight"&gt;&lt;pre class="language-python"&gt;&lt;code class="language-python"&gt;experimental_conditions &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token punctuation"&gt;{&lt;/span&gt;
&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;
&lt;span class="token string"&gt;"slit"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token string"&gt;"-0.2 nm"&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;
&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;
&lt;span class="token punctuation"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To support Mr. Corentin’s input, from now I implement input of complex slit settings in compliance with &lt;a href="https://radis.readthedocs.io/en/latest/source/radis.spectrum.spectrum.html#radis.spectrum.spectrum.Spectrum.apply_slit"&gt;apply_slit()&lt;/a&gt; function of RADIS. Advanced settings such like this can be inputted:&lt;/p&gt;
&lt;div class="gatsby-highlight"&gt;&lt;pre class="language-python"&gt;&lt;code class="language-python"&gt;experimental_conditions &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token punctuation"&gt;{&lt;/span&gt;
&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;
&lt;span class="token string"&gt;"slit"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token punctuation"&gt;{&lt;/span&gt;
&lt;span class="token string"&gt;"slit_function"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token punctuation"&gt;(&lt;/span&gt;top_slit_nm&lt;span class="token punctuation"&gt;,&lt;/span&gt; base_slit_nm&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;
&lt;span class="token string"&gt;"unit"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token string"&gt;"nm"&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;
&lt;span class="token string"&gt;"shape"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token string"&gt;'trapezoidal'&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;
&lt;span class="token string"&gt;"center_wavespace"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; center_slit&lt;span class="token punctuation"&gt;,&lt;/span&gt;
&lt;span class="token string"&gt;"slit_dispersion"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; slit_dispersion&lt;span class="token punctuation"&gt;,&lt;/span&gt;
&lt;span class="token string"&gt;"inplace"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token boolean"&gt;False&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;
&lt;span class="token punctuation"&gt;}&lt;/span&gt;
&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;&lt;span class="token punctuation"&gt;.&lt;/span&gt;
&lt;span class="token punctuation"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And so, I have acquired very good results:&lt;/p&gt;
&lt;h5&gt;Spectrum 1:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Tvib:             5975.28759 (init = 6000)&lt;/li&gt;
&lt;li&gt;Trot:             5751.19260 (init = 4000)&lt;/li&gt;
&lt;li&gt;mole_fraction:    0.05501671 (init = 0.1)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class="gatsby-resp-image-wrapper" style="display: block; margin-left: auto; margin-right: auto;"&gt;
&lt;a class="gatsby-resp-image-link" href="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/2385b33c685a75c2a93493ceed61841d/cca35/s1.png" rel="noopener" style="display: block;" target="_blank"&gt;
&lt;span class="gatsby-resp-image-background-image" style="display: block;"&gt;&lt;/span&gt;
&lt;img alt="Fit result of spectrum 1" class="gatsby-resp-image-image" src="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/2385b33c685a75c2a93493ceed61841d/f058b/s1.png" style="width: 100%; height: 100%; margin: 0; vertical-align: middle;" title="Fit result of spectrum 1"&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;h5&gt;Spectrum 2:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Tvib:             4547.43903 (init = 6000)&lt;/li&gt;
&lt;li&gt;Trot:             4073.50694 (init = 4000)&lt;/li&gt;
&lt;li&gt;mole_fraction:    0.05939918 (init = 0.1)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class="gatsby-resp-image-wrapper" style="display: block; margin-left: auto; margin-right: auto;"&gt;
&lt;a class="gatsby-resp-image-link" href="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/345f41ef9109afb638a3aa9eedb6e4f4/cca35/s2.png" rel="noopener" style="display: block;" target="_blank"&gt;
&lt;span class="gatsby-resp-image-background-image" style="display: block;"&gt;&lt;/span&gt;
&lt;img alt="Fit result of spectrum 2" class="gatsby-resp-image-image" src="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/345f41ef9109afb638a3aa9eedb6e4f4/f058b/s2.png" style="width: 100%; height: 100%; margin: 0; vertical-align: middle;" title="Fit result of spectrum 2"&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;h5&gt;Spectrum 3:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Tvib:             2811.98218 (init = 6000)&lt;/li&gt;
&lt;li&gt;Trot:             2915.36318 (init = 4000)&lt;/li&gt;
&lt;li&gt;mole_fraction:    0.07739941 (init = 0.05)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class="gatsby-resp-image-wrapper" style="display: block; margin-left: auto; margin-right: auto;"&gt;
&lt;a class="gatsby-resp-image-link" href="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/5b1fb36019eae53d82648d9fdf049153/cca35/s3.png" rel="noopener" style="display: block;" target="_blank"&gt;
&lt;span class="gatsby-resp-image-background-image" style="display: block;"&gt;&lt;/span&gt;
&lt;img alt="Fit result of spectrum 3" class="gatsby-resp-image-image" src="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/5b1fb36019eae53d82648d9fdf049153/f058b/s3.png" style="width: 100%; height: 100%; margin: 0; vertical-align: middle;" title="Fit result of spectrum 3"&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;h5&gt;Spectrum 4:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Tvib:             4721.28892 (init = 6000)&lt;/li&gt;
&lt;li&gt;Trot:             4728.52960 (init = 4000)&lt;/li&gt;
&lt;li&gt;mole_fraction:    0.07008355 (init = 0.05)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class="gatsby-resp-image-wrapper" style="display: block; margin-left: auto; margin-right: auto;"&gt;
&lt;a class="gatsby-resp-image-link" href="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/569114757da34f35d48661ef31830737/cca35/s4.png" rel="noopener" style="display: block;" target="_blank"&gt;
&lt;span class="gatsby-resp-image-background-image" style="display: block;"&gt;&lt;/span&gt;
&lt;img alt="Fit result of spectrum 4" class="gatsby-resp-image-image" src="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/569114757da34f35d48661ef31830737/f058b/s4.png" style="width: 100%; height: 100%; margin: 0; vertical-align: middle;" title="Fit result of spectrum 4"&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2022/08/20220828_0000_tranhuunhathuy/</guid><pubDate>Sat, 27 Aug 2022 23:00:00 GMT</pubDate></item><item><title>Unit Selection</title><link>http://openastronomy.org/Universe_OA/posts/2022/08/20220820_0000_arunavabasu-03/</link><dc:creator>arunavabasu-03</dc:creator><description>&lt;p&gt;Unit Selection Previously radis only supports the fixed arbitary units  cm-1(wavelength range) , bar(pressure) ..  , but now user can chose…&lt;/p&gt;
&lt;div style="margin-top: 50px; font-style: italic;"&gt;&lt;strong&gt;&lt;a href="https://gsoc.arunavabasu.com/10-11/"&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br&gt; &lt;br&gt;
&lt;!-- TEASER_END --&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2022/08/20220820_0000_arunavabasu-03/</guid><pubDate>Fri, 19 Aug 2022 23:00:00 GMT</pubDate></item></channel></rss>