<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Universe OpenAstronomy</title><link>http://openastronomy.org/Universe_OA/</link><description>This is an aggregator of openastronomy people</description><atom:link href="http://openastronomy.org/Universe_OA/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Thu, 08 Sep 2022 02:47:07 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>week 11 and week 12</title><link>http://openastronomy.org/Universe_OA/posts/2022/09/20220903_0000_supriya1702/</link><dc:creator>Supriya1702</dc:creator><description>&lt;p&gt;Now since fetching of extra columns which includes broadening coeffcients was completed I had to pull the the fetch_hitran_update changes…&lt;/p&gt;
&lt;div style="margin-top: 50px; font-style: italic;"&gt;&lt;strong&gt;&lt;a href="https://minimal-blog.lekoarts.de/week-11-and-week-12"&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br&gt; &lt;br&gt;
&lt;!-- TEASER_END --&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2022/09/20220903_0000_supriya1702/</guid><pubDate>Fri, 02 Sep 2022 23:00:00 GMT</pubDate></item><item><title>GSoC @ Stingray: Testing Testing Testing …</title><link>http://openastronomy.org/Universe_OA/posts/2022/08/20220826_1631_mihirtripathi97/</link><dc:creator>Mihirtripathi</dc:creator><description>&lt;h4&gt;GSoC @ Stingray: Testing Testing Testing …&lt;/h4&gt;&lt;p&gt;After getting the code for bexvar in working condition, the next task in front of me was to test the code. As I mentioned in the last blog I was completely new to software testing. This meant a lot of new things to learn.&lt;/p&gt;
&lt;p&gt;In this blog, I am going to write about my experience with testing. This was one of the best learning experiences of my GSoC journey so far. With the help of my mentors, I arrived at the conclusion that primarily there are three kinds of tests that would be needed for bexvar.&lt;/p&gt;
&lt;p&gt;(1) Unit tests to check if various components of my code provide the correct outputs individually.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;(2) Some functional tests to check if the entire bexvar() function works properly and gives the desired output.&lt;/p&gt;
&lt;p&gt;(3) Some other tests to check if proper warnings and errors are raised in the case of bad inputs.&lt;/p&gt;
&lt;p&gt;I started with the unit tests. Creating the unit tests for internal functions was comparatively easy. Two of the three internal functions provided deterministic outputs. All that was needed for testing them was to calculate the desired output and compare it with the output from the code.&lt;/p&gt;
&lt;p&gt;One of the major problems arose while designing functional tests. The bexvar() function returns an array that contains the samples of the log of the bexvar (i.e. log(\sigma_{count rate})). These samples are proportional to the posterior distribution of log(\sigma_\{count rate}). These samples are generated by an MCMC generator and therefore the elements and the number of elements of the output array are different after each run for the same data. This makes testing the result more difficult as the elements of the array could not be compared with a predetermined result.&lt;/p&gt;
&lt;p&gt;As the bexvar() aims to provide the posterior distribution of log(Sigma_\{count rate}) the elements as individuals do not matter but the shape of their histogram provides the posterior distribution. Therefore we decided to test the results with some statistical parameters derived from the generated samples which quantify the distribution.&lt;/p&gt;
&lt;p&gt;The problems that I faced while designing the third type of test, helped me find and resolve multiple unseen issues with the code. It took me more time than I expected to complete the testing phase. However, I am glad to announce that the all tests are now passing successfully. Additionally, I also passed the mid-term evaluations! Phew!&lt;/p&gt;
&lt;p&gt;At end of the testing phase, The &lt;a href="https://github.com/StingraySoftware/stingray/pull/664"&gt;PR&lt;/a&gt; was ready to be merged, after a few minor updates in the docstrings it was merged! Yaay! The work is not yet done though. Next, I am working to add a method to Stingray’s lightcurve class. In addition to this, I will be creating a tutorial page for using the bexvar and will also make some more improvements in the code if time permits.&lt;/p&gt;
&lt;img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=9d1572ac43ef" width="1"&gt;</description><category>stingray</category><guid>http://openastronomy.org/Universe_OA/posts/2022/08/20220826_1631_mihirtripathi97/</guid><pubDate>Fri, 26 Aug 2022 15:31:33 GMT</pubDate></item><item><title>GSoC Blog #3</title><link>http://openastronomy.org/Universe_OA/posts/2022/08/20220820_0702_aman-pandey-afk/</link><dc:creator>AMAN PANDEY</dc:creator><description>&lt;figure&gt;&lt;img alt="" src="https://cdn-images-1.medium.com/max/680/1*dfjiDfMcY8h9eEOySAnxbA.jpeg"&gt;&lt;/figure&gt;&lt;p&gt;Mid Evaluations are over, and I’m glad to be back at work. As the base functionality is done now, I am on to provide user APIs to create cross spectra and periodograms from actual astronomical data easily.&lt;/p&gt;
&lt;p&gt;I was busy the first week after the mid-term due to intern season at my campus, so that I couldn’t contribute much. Afterward, I started by understanding different functionalities related to photon count events next week. The plan was to:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Read the photon count data from different file formats and get the essential information like time, GTIs, PI channels, etc.&lt;/li&gt;&lt;li&gt;Create EventList struct and handle different methods like sorting, joining, filtering, and simulating these data.&lt;/li&gt;&lt;li&gt;Test these methods by appropriately re-binning, creating periodograms, and plotting the data.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;There was also modification in the git workflow as the documentation branch was based on the gti one, which now has its parent main.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;For the 3rd week, I have worked on the EventList APIs and the data reading part. Its currently implemented for the FITS extension, but I will expand to other formats like HDF5 or ECSV. I have also studied LightCurve structure and implemented a to and from conversion with EventLists, although its methods are needed to be worked upon.&lt;/p&gt;
&lt;p&gt;In the coming weeks, I aim to create extensive tests, debug these methods, and optimize them in Julia. After these are done, other features like coherence and time lags will also be necessary. The period will &lt;em&gt;end&lt;/em&gt; with documentation and refactoring of already existing codes, and &lt;em&gt;if&lt;/em&gt; I get time, I will work on variability vs. energy spectrum.&lt;/p&gt;
&lt;img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=350c7b7dad61" width="1"&gt;</description><category>stingray</category><guid>http://openastronomy.org/Universe_OA/posts/2022/08/20220820_0702_aman-pandey-afk/</guid><pubDate>Sat, 20 Aug 2022 06:02:40 GMT</pubDate></item><item><title>week 9 and week 10</title><link>http://openastronomy.org/Universe_OA/posts/2022/08/20220820_0000_supriya1702/</link><dc:creator>Supriya1702</dc:creator><description>&lt;p&gt;Dr. Erwan and Mr. Anand (my mentors) suggested since my Non-Air Diluent project was getting large I should first create a separate PR for…&lt;/p&gt;
&lt;div style="margin-top: 50px; font-style: italic;"&gt;&lt;strong&gt;&lt;a href="https://minimal-blog.lekoarts.de/week-9-and-week-10"&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br&gt; &lt;br&gt;
&lt;!-- TEASER_END --&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2022/08/20220820_0000_supriya1702/</guid><pubDate>Fri, 19 Aug 2022 23:00:00 GMT</pubDate></item><item><title>week 9 and week 10</title><link>http://openastronomy.org/Universe_OA/posts/2022/08/20220816_0000_supriya1702/</link><dc:creator>Supriya1702</dc:creator><description>&lt;p&gt;Dr. Erwan and Mr. Anand (my mentors) suggested since my Non-Air Diluent project was getting large I should first create a separate PR for…&lt;/p&gt;
&lt;div style="margin-top: 50px; font-style: italic;"&gt;&lt;strong&gt;&lt;a href="https://minimal-blog.lekoarts.de/week-9-and-week-10"&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br&gt; &lt;br&gt;
&lt;!-- TEASER_END --&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2022/08/20220816_0000_supriya1702/</guid><pubDate>Mon, 15 Aug 2022 23:00:00 GMT</pubDate></item><item><title>Welcome to Jekyll!</title><link>http://openastronomy.org/Universe_OA/posts/2022/08/20220810_1030_sagarchotalia/</link><dc:creator>OpenAstronomy</dc:creator><description>&lt;p&gt;You’ll find this post in your &lt;code class="language-plaintext highlighter-rouge"&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class="language-plaintext highlighter-rouge"&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;p&gt;&lt;code class="language-plaintext highlighter-rouge"&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class="language-plaintext highlighter-rouge"&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class="language-plaintext highlighter-rouge"&gt;MONTH&lt;/code&gt; and &lt;code class="language-plaintext highlighter-rouge"&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class="language-plaintext highlighter-rouge"&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-ruby"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;print_hi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Hi, &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;print_hi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Tom'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href="https://jekyllrb.com/docs/home"&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href="https://github.com/jekyll/jekyll"&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href="https://talk.jekyllrb.com/"&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2022/08/20220810_1030_sagarchotalia/</guid><pubDate>Wed, 10 Aug 2022 09:30:40 GMT</pubDate></item><item><title>GSoC 2022: Project Helioviewer — Moving close to the First Release</title><link>http://openastronomy.org/Universe_OA/posts/2022/08/20220810_0551_akash5100/</link><dc:creator>Akash</dc:creator><description>&lt;h4&gt;GSoC 2022: Project Helioviewer — Moving close to the First Release&lt;/h4&gt;&lt;h4&gt;Week 7&lt;/h4&gt;&lt;p&gt;The solution to switch the base URL of the python API wrapper got merged with PR &lt;a href="https://github.com/Helioviewer-Project/python-api/pull/41"&gt;#41&lt;/a&gt; and follow-up with PR &lt;a href="https://github.com/Helioviewer-Project/python-api/pull/44"&gt;#44&lt;/a&gt; by Nabil, now the next endpoint group was the movies.&lt;/p&gt;
&lt;p&gt;I rebased my old PR &lt;a href="https://github.com/Helioviewer-Project/python-api/pull/38"&gt;#38&lt;/a&gt; with the main branch, which brings the &lt;strong&gt;QueueMovie&lt;/strong&gt; endpoint, and opened &lt;a href="https://github.com/Helioviewer-Project/python-api/pull/51"&gt;#51&lt;/a&gt; which brings &lt;strong&gt;reQueueMovie&lt;/strong&gt; and &lt;strong&gt;getMovieStatus &lt;/strong&gt;endpoint to facade and backend.&lt;/p&gt;
&lt;p&gt;By the end of the week, both the PR is merged and we now focus on the documentation before the first release.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;h4&gt;Week 8&lt;/h4&gt;&lt;p&gt;I started working on creating new &lt;strong&gt;RST&lt;/strong&gt; files (reStructuredText is a file format for textual data used primarily in the Python programming language community for technical documentation), writing developer's and installation documentation.&lt;/p&gt;
&lt;p&gt;With PR &lt;a href="https://github.com/Helioviewer-Project/python-api/pull/48"&gt;#48&lt;/a&gt;, the documentation for the first release is ready.&lt;/p&gt;
&lt;p&gt;See the documentation here: &lt;a href="https://hvpy.readthedocs.io/en/latest/"&gt;https://hvpy.readthedocs.io/en/latest/&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Week 9&lt;/h4&gt;&lt;p&gt;The current &lt;strong&gt;hvpy&lt;/strong&gt; unittest tests the endpoint functions with the default API URL. But we also want to test the endpoint functions with the beta URL. Basically testing version 3 of the API before release.&lt;/p&gt;
&lt;p&gt;To achieve what we decided, we create an environment variable in the tox file, which triggers the function to &lt;em&gt;switch the base URL, &lt;/em&gt;and now all the test in tox runs in the beta URL.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;PR &lt;a href="https://github.com/Helioviewer-Project/python-api/pull/55"&gt;#55&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;img alt="" height="1" src="https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=c43249d042d9" width="1"&gt;</description><category>SunPy</category><guid>http://openastronomy.org/Universe_OA/posts/2022/08/20220810_0551_akash5100/</guid><pubDate>Wed, 10 Aug 2022 04:51:50 GMT</pubDate></item><item><title>Week 7 and 8 - User-testing, Mr. Minou's case, HAPPY BIRTHDAY TO ME!!!</title><link>http://openastronomy.org/Universe_OA/posts/2022/08/20220807_0000_tranhuunhathuy/</link><dc:creator>TranHuuNhatHuy</dc:creator><description>&lt;p&gt;For now, my priority is to focus on extensive user-testing cases from real-life experimental spectra, instead of the synthetic ones in first phase of the project. One of the very first experimental spectra I get, is from Mr. Nicolas MinesiMinesi, or Mr. Minou, a Post-doctoral Researcher at Universify of California, L.A. He specializes in laser spectroscopy and also one of my mentors in RADIS.&lt;/p&gt;
&lt;h4&gt;1. The spectrum&lt;/h4&gt;
&lt;p&gt;Mr. Minou introduced an absorbance CO spectrum near 2011 cm-1. He stored the data in a MAT (Matlab) file, which is extracted by this script:&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;div class="gatsby-highlight"&gt;&lt;pre class="language-python"&gt;&lt;code class="language-python"&gt;fileName &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token string"&gt;"1857_VoigtCO_Minesi.mat"&lt;/span&gt;
data &lt;span class="token operator"&gt;=&lt;/span&gt;  scipy&lt;span class="token punctuation"&gt;.&lt;/span&gt;io&lt;span class="token punctuation"&gt;.&lt;/span&gt;loadmat&lt;span class="token punctuation"&gt;(&lt;/span&gt;fileName&lt;span class="token punctuation"&gt;,&lt;/span&gt; simplify_cells&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token boolean"&gt;True&lt;/span&gt;&lt;span class="token punctuation"&gt;)&lt;/span&gt;&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token string"&gt;'CO_resu_Voigt'&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;
index &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token number"&gt;20&lt;/span&gt;
s_experimental &lt;span class="token operator"&gt;=&lt;/span&gt; Spectrum&lt;span class="token punctuation"&gt;.&lt;/span&gt;from_array&lt;span class="token punctuation"&gt;(&lt;/span&gt;
data&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token string"&gt;'nu'&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;
data&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token string"&gt;'A_exp'&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token punctuation"&gt;:&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;index&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;
&lt;span class="token string"&gt;'absorbance'&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;
wunit&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;'cm-1'&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;
unit&lt;span class="token operator"&gt;=&lt;/span&gt;&lt;span class="token string"&gt;''&lt;/span&gt;
&lt;span class="token punctuation"&gt;)&lt;/span&gt; &lt;span class="token comment"&gt;# adimensioned&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With this, I acquire the experimental spectrum as below:&lt;/p&gt;
&lt;p&gt;&lt;span class="gatsby-resp-image-wrapper" style="display: block; margin-left: auto; margin-right: auto;"&gt;
&lt;a class="gatsby-resp-image-link" href="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/e70ce9c33fa1293cdc0e69659560ada6/df5d6/exp_spectrum.png" rel="noopener" style="display: block;" target="_blank"&gt;
&lt;span class="gatsby-resp-image-background-image" style="display: block;"&gt;&lt;/span&gt;
&lt;img alt="Mr. Minou's experimental spectrum, in absorbance." class="gatsby-resp-image-image" src="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/e70ce9c33fa1293cdc0e69659560ada6/f058b/exp_spectrum.png" style="width: 100%; height: 100%; margin: 0; vertical-align: middle;" title="Mr. Minou's experimental spectrum, in absorbance."&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;And then, soon enough, I have also acquired his ground-truth data, which are fed to the JSON structures:&lt;/p&gt;
&lt;div class="gatsby-highlight"&gt;&lt;pre class="language-python"&gt;&lt;code class="language-python"&gt;&lt;span class="token comment"&gt;# Experimental conditions which will be used for spectrum modeling. Basically, these are known ground-truths.&lt;/span&gt;
experimental_conditions &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token punctuation"&gt;{&lt;/span&gt;
&lt;span class="token string"&gt;"molecule"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token string"&gt;"CO"&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;          &lt;span class="token comment"&gt;# Molecule ID&lt;/span&gt;
&lt;span class="token string"&gt;"isotope"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token string"&gt;"1"&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;            &lt;span class="token comment"&gt;# Isotope ID, can have multiple at once&lt;/span&gt;
&lt;span class="token string"&gt;"wmin"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token number"&gt;2010.6&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;            &lt;span class="token comment"&gt;# Starting wavelength/wavenumber to be cropped out from the original experimental spectrum.&lt;/span&gt;
&lt;span class="token string"&gt;"wmax"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token number"&gt;2011.6&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;            &lt;span class="token comment"&gt;# Ending wavelength/wavenumber for the cropping range.&lt;/span&gt;
&lt;span class="token string"&gt;"wunit"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token string"&gt;"cm-1"&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;           &lt;span class="token comment"&gt;# Accompanying unit of those 2 wavelengths/wavenumbers above.&lt;/span&gt;
&lt;span class="token string"&gt;"pressure"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token number"&gt;1&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;             &lt;span class="token comment"&gt;# Partial pressure of gas, in "bar" unit.&lt;/span&gt;
&lt;span class="token string"&gt;"path_length"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token number"&gt;10&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;         &lt;span class="token comment"&gt;# Experimental path length, in "cm" unit.&lt;/span&gt;
&lt;span class="token string"&gt;"wstep"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token number"&gt;0.001&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;
&lt;span class="token string"&gt;"databank"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token string"&gt;"hitemp"&lt;/span&gt;       &lt;span class="token comment"&gt;# Databank used for calculation. Must be stated.&lt;/span&gt;
&lt;span class="token punctuation"&gt;}&lt;/span&gt;

&lt;span class="token comment"&gt;# List of parameters to be fitted.&lt;/span&gt;
fit_parameters &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token punctuation"&gt;{&lt;/span&gt;
&lt;span class="token string"&gt;"Tgas"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token number"&gt;7170&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;              &lt;span class="token comment"&gt;# Fit parameter, accompanied by its initial value.&lt;/span&gt;
&lt;span class="token string"&gt;"mole_fraction"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token number"&gt;0.07&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;     &lt;span class="token comment"&gt;# Species mole fraction, from 0 to 1.&lt;/span&gt;
&lt;span class="token string"&gt;"offset"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token string"&gt;"0 cm-1"&lt;/span&gt;         &lt;span class="token comment"&gt;# Experimental offset, must be a blank space separating offset amount and unit.&lt;/span&gt;
&lt;span class="token punctuation"&gt;}&lt;/span&gt;

&lt;span class="token comment"&gt;# List of bounding ranges applied for those fit parameters above.&lt;/span&gt;
bounding_ranges &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token punctuation"&gt;{&lt;/span&gt;
&lt;span class="token string"&gt;"Tgas"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;2000&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; &lt;span class="token number"&gt;9000&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;      &lt;span class="token comment"&gt;# Bounding ranges for each fit parameter stated above. You can skip this step, but not recommended.&lt;/span&gt;
&lt;span class="token string"&gt;"mole_fraction"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token number"&gt;0&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; &lt;span class="token number"&gt;1&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;   &lt;span class="token comment"&gt;# Species mole fraction, from 0 to 1.&lt;/span&gt;
&lt;span class="token string"&gt;"offset"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token punctuation"&gt;[&lt;/span&gt;&lt;span class="token operator"&gt;-&lt;/span&gt;&lt;span class="token number"&gt;0.1&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt; &lt;span class="token number"&gt;0.1&lt;/span&gt;&lt;span class="token punctuation"&gt;]&lt;/span&gt;      &lt;span class="token comment"&gt;# Experimental offset, must be a blank space separating offset amount and unit&lt;/span&gt;
&lt;span class="token punctuation"&gt;}&lt;/span&gt;

&lt;span class="token comment"&gt;# Fitting pipeline setups.&lt;/span&gt;
fit_properties &lt;span class="token operator"&gt;=&lt;/span&gt; &lt;span class="token punctuation"&gt;{&lt;/span&gt;
&lt;span class="token string"&gt;"method"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token string"&gt;"lbfgsb"&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;        &lt;span class="token comment"&gt;# Preferred fitting method from the 17 confirmed methods of LMFIT stated in week 4 blog. By default, "leastsq".&lt;/span&gt;
&lt;span class="token string"&gt;"fit_var"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token string"&gt;"absorbance"&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;   &lt;span class="token comment"&gt;# Spectral quantity to be extracted for fitting process, such as "radiance", "absorbance", etc.&lt;/span&gt;
&lt;span class="token string"&gt;"normalize"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token boolean"&gt;False&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;        &lt;span class="token comment"&gt;# Either applying normalization on both spectra or not.&lt;/span&gt;
&lt;span class="token string"&gt;"max_loop"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token number"&gt;300&lt;/span&gt;&lt;span class="token punctuation"&gt;,&lt;/span&gt;           &lt;span class="token comment"&gt;# Max number of loops allowed. By default, 100.&lt;/span&gt;
&lt;span class="token string"&gt;"tol"&lt;/span&gt; &lt;span class="token punctuation"&gt;:&lt;/span&gt; &lt;span class="token number"&gt;1e-20&lt;/span&gt;               &lt;span class="token comment"&gt;# Fitting tolerance, only applicable for "lbfgsb" method.&lt;/span&gt;
&lt;span class="token punctuation"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;During my attempt to fit this spectrum, several bugs have been found and addressed.&lt;/p&gt;
&lt;h4&gt;2. Improvements&lt;/h4&gt;
&lt;h5&gt;a. Databank statement&lt;/h5&gt;
&lt;p&gt;Initially, the databank selection is hard-coded into my module, with &lt;code class="language-text"&gt;hitran&lt;/code&gt; for LTE cases and &lt;code class="language-text"&gt;hitemp&lt;/code&gt; for non-LTE cases. In this case, Mr. Minou’s spectrum is an LTE one, but he used &lt;code class="language-text"&gt;hitemp&lt;/code&gt; databank for calculation. Basically, for CO molecule, there are lines in &lt;code class="language-text"&gt;hitemp&lt;/code&gt; databank that are missing in &lt;code class="language-text"&gt;hitran&lt;/code&gt; databank, and thus the default &lt;code class="language-text"&gt;hitran&lt;/code&gt; for LTE does not provide a good result for Mr. Minou’s case.&lt;/p&gt;
&lt;p&gt;Thus, I make an implementation that allows users to specify the databank to be fetched into SpectrumFactory with &lt;code class="language-text"&gt;fetch_databank&lt;/code&gt;, by stating it directly in the script, as you can see above in &lt;code class="language-text"&gt;experimental_conditions&lt;/code&gt;.&lt;/p&gt;
&lt;h5&gt;b. Allow &lt;code class="language-text"&gt;offset&lt;/code&gt; to be fitted&lt;/h5&gt;
&lt;p&gt;Previously, as &lt;code class="language-text"&gt;offset&lt;/code&gt; and &lt;code class="language-text"&gt;slit&lt;/code&gt; are not parameters of &lt;code class="language-text"&gt;calc_spectrum()&lt;/code&gt;, but instead post-calculation convolution steps, so I did not include them as fit parameters. Now &lt;code class="language-text"&gt;offset&lt;/code&gt; is included and can be fitted as you can see above. As for &lt;code class="language-text"&gt;slit&lt;/code&gt;, according to Mr. Minou, usually the users know their FTIR spectrometer’s stats, and measure slit separately, so I have yet implemeted &lt;code class="language-text"&gt;slit&lt;/code&gt; as fittable parameter.&lt;/p&gt;
&lt;h4&gt;3. Result&lt;/h4&gt;
&lt;p&gt;Finally, we can see a not-perfect-but-good-enough result:&lt;/p&gt;
&lt;p&gt;&lt;span class="gatsby-resp-image-wrapper" style="display: block; margin-left: auto; margin-right: auto;"&gt;
&lt;a class="gatsby-resp-image-link" href="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/178b6fac46562dfaf07965c4cb5ebe13/9451d/result.png" rel="noopener" style="display: block;" target="_blank"&gt;
&lt;span class="gatsby-resp-image-background-image" style="display: block;"&gt;&lt;/span&gt;
&lt;img alt="Fitting result of Mr. Minou's case." class="gatsby-resp-image-image" src="https://gsoc2022tranhuunhathuy.gatsbyjs.io/static/178b6fac46562dfaf07965c4cb5ebe13/f058b/result.png" style="width: 100%; height: 100%; margin: 0; vertical-align: middle;" title="Fitting result of Mr. Minou's case."&gt;
&lt;/a&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;With best-fit parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class="language-text"&gt;Tgas&lt;/code&gt; : 6657.56 K (initially 7000 K).&lt;/li&gt;
&lt;li&gt;&lt;code class="language-text"&gt;mole_fraction&lt;/code&gt; : 0.052 (initially 0.05).&lt;/li&gt;
&lt;li&gt;&lt;code class="language-text"&gt;offset&lt;/code&gt; : -0.0177 cm-1 (initially 0 cm-1).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And the fitting performance, which is really, really robust:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fitting method: L-BFGS-B.&lt;/li&gt;
&lt;li&gt;Number of fitting loops: 120.&lt;/li&gt;
&lt;li&gt;Total fitting time: 4.3125 s.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To explain the discrepancy between experimental and best-fit spectra, Mr. Minou suggests that, this is some of physical problems, as RADIS currently only uses the air broadening parameters while originally he did this experiment in Argon. Future updates on other molecules’ broadening coefficients will be needed to increase the accuracy of these cases with non-air diluents.&lt;/p&gt;
&lt;p&gt;And so that’s it! My first complete case has done, and I have much better confidence in my fitting module, while being eager to confront other cases and gradually improve my module. This is such a good birthday evening.&lt;/p&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2022/08/20220807_0000_tranhuunhathuy/</guid><pubDate>Sat, 06 Aug 2022 23:00:00 GMT</pubDate></item><item><title>Advanced options</title><link>http://openastronomy.org/Universe_OA/posts/2022/07/20220731_0000_arunavabasu-03/</link><dc:creator>arunavabasu-03</dc:creator><description>&lt;p&gt;Impove default resolution of ploted spectrum In  wstep = “auto”  radis app gives slitly low res. for that reasons plotted  spectrum  is…&lt;/p&gt;
&lt;div style="margin-top: 50px; font-style: italic;"&gt;&lt;strong&gt;&lt;a href="https://minimal-blog.lekoarts.de/6thweek/"&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br&gt; &lt;br&gt;
&lt;!-- TEASER_END --&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2022/07/20220731_0000_arunavabasu-03/</guid><pubDate>Sat, 30 Jul 2022 23:00:00 GMT</pubDate></item><item><title>week 7 and week 8 (Mid-Term Evaluation!)</title><link>http://openastronomy.org/Universe_OA/posts/2022/07/20220730_0000_supriya1702/</link><dc:creator>Supriya1702</dc:creator><description>&lt;p&gt;Now, this week was the Mid-Term Evaluation week and I was totally nervous about it. I knew that I had put alot of efforts and time into the…&lt;/p&gt;
&lt;div style="margin-top: 50px; font-style: italic;"&gt;&lt;strong&gt;&lt;a href="https://minimal-blog.lekoarts.de/week-7-and-week-8-mid-term-evaluation"&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br&gt; &lt;br&gt;
&lt;!-- TEASER_END --&gt;</description><category>radis</category><guid>http://openastronomy.org/Universe_OA/posts/2022/07/20220730_0000_supriya1702/</guid><pubDate>Fri, 29 Jul 2022 23:00:00 GMT</pubDate></item></channel></rss>